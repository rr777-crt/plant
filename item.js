'use strict';

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏
const shopItems = {
    sunGenerator: {
        name: "‚òÄÔ∏è –ú–∞–ª–µ–Ω—å–∫–æ–µ —Å–æ–ª–Ω—Ü–µ",
        description: "–î–∞–µ—Ç +1 —Å–æ–ª–Ω—Ü–µ –∫–∞–∂–¥—ã–µ 20 —Å–µ–∫—É–Ω–¥",
        price: 10, // —Ü–µ–Ω–∞ –≤ —Å–æ–ª–Ω—Ü–∞—Ö
        owned: 0,
        effect: function() {
            addSuns += 1; // +1 —Å–æ–ª–Ω—Ü–µ
        }
    },
    sunGeneratorPro: {
        name: "üî• –ë–æ–ª—å—à–æ–µ —Å–æ–ª–Ω—Ü–µ",
        description: "–î–∞–µ—Ç +5 —Å–æ–ª–Ω—Ü –∫–∞–∂–¥—ã–µ 20 —Å–µ–∫—É–Ω–¥",
        price: 50, // —Ü–µ–Ω–∞ –≤ —Å–æ–ª–Ω—Ü–∞—Ö
        owned: 0,
        effect: function() {
            addSuns += 5; // +5 —Å–æ–ª–Ω—Ü
        }
    },
    dropBooster: {
        name: "üíß –ö–∞–ø–µ–ª—å–Ω—ã–π —É—Å–∏–ª–∏—Ç–µ–ª—å",
        description: "–î–∞–µ—Ç +100 –∫–∞–ø–µ–ª—å –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥",
        price: 100, // —Ü–µ–Ω–∞ –≤ –∫–∞–ø–ª—è—Ö
        priceType: 'drops', // —Ç–∏–ø –≤–∞–ª—é—Ç—ã (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - —Å–æ–ª–Ω—Ü–∞)
        owned: 0,
        effect: function() {
            score += 100; // +100 –∫–∞–ø–µ–ª—å
            scoreText.innerText = score;
        }
    },
    dropBoosterPro: {
        name: "üåä –ú–æ—â–Ω—ã–π –∫–∞–ø–µ–ª—å–Ω—ã–π —É—Å–∏–ª–∏—Ç–µ–ª—å",
        description: "–î–∞–µ—Ç +1000 –∫–∞–ø–µ–ª—å –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥",
        price: 1000, // —Ü–µ–Ω–∞ –≤ –∫–∞–ø–ª—è—Ö
        priceType: 'drops',
        owned: 0,
        effect: function() {
            score += 1000; // +1000 –∫–∞–ø–µ–ª—å
            scoreText.innerText = score;
        }
    }
};

// –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –º–∞–≥–∞–∑–∏–Ω–∞
function createShop() {
    const shopDiv = document.createElement('div');
    shopDiv.id = 'shop';
    shopDiv.style.position = 'fixed';
    shopDiv.style.right = '20px';
    shopDiv.style.top = '20px';
    shopDiv.style.backgroundColor = '#333';
    shopDiv.style.padding = '15px';
    shopDiv.style.borderRadius = '10px';
    shopDiv.style.color = 'white';
    shopDiv.style.zIndex = '1000';
    
    const shopTitle = document.createElement('h2');
    shopTitle.textContent = 'üõí –ú–∞–≥–∞–∑–∏–Ω –ø—Ä–µ–¥–º–µ—Ç–æ–≤';
    shopDiv.appendChild(shopTitle);
    
    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
    for (const [key, item] of Object.entries(shopItems)) {
        const itemDiv = document.createElement('div');
        itemDiv.className = 'shop-item';
        itemDiv.style.margin = '10px 0';
        itemDiv.style.padding = '10px';
        itemDiv.style.border = '1px solid #555';
        itemDiv.style.borderRadius = '5px';
        
        const itemName = document.createElement('h3');
        itemName.textContent = `${item.name} (${item.owned} –∫—É–ø–ª–µ–Ω–æ)`;
        itemName.style.margin = '0 0 5px 0';
        
        const itemDesc = document.createElement('p');
        itemDesc.textContent = item.description;
        itemDesc.style.margin = '0 0 5px 0';
        itemDesc.style.fontSize = '14px';
        itemDesc.style.color = '#ccc';
        
        const itemPrice = document.createElement('p');
        const priceType = item.priceType === 'drops' ? '–∫–∞–ø–µ–ª—å' : '—Å–æ–ª–Ω—Ü';
        itemPrice.textContent = `–¶–µ–Ω–∞: ${item.price} ${priceType}`;
        itemPrice.style.margin = '0 0 5px 0';
        itemPrice.style.fontWeight = 'bold';
        
        const buyButton = document.createElement('button');
        buyButton.textContent = '–ö—É–ø–∏—Ç—å';
        buyButton.style.padding = '5px 10px';
        buyButton.style.cursor = 'pointer';
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ö–≤–∞—Ç–∞–µ—Ç –ª–∏ –≤–∞–ª—é—Ç—ã
        const canAfford = () => {
            if (item.priceType === 'drops') {
                return score >= item.price;
            } else {
                return suns >= item.price;
            }
        };
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
        const updateButtonState = () => {
            if (canAfford()) {
                buyButton.disabled = false;
                buyButton.style.backgroundColor = '#4CAF50';
            } else {
                buyButton.disabled = true;
                buyButton.style.backgroundColor = '#555';
            }
        };
        
        updateButtonState();
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∫—É–ø–∫–∏
        buyButton.onclick = function() {
            if (canAfford()) {
                // –í—ã—á–∏—Ç–∞–µ–º —Ü–µ–Ω—É
                if (item.priceType === 'drops') {
                    getScore(-item.price);
                } else {
                    getSuns(-item.price);
                }
                
                // –ü—Ä–∏–º–µ–Ω—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç
                item.effect();
                
                // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö
                item.owned++;
                itemName.textContent = `${item.name} (${item.owned} –∫—É–ø–ª–µ–Ω–æ)`;
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                alert(`–í—ã –∫—É–ø–∏–ª–∏ ${item.name}!`);
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
                updateButtonState();
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–≥—Ä—É
                saveSystem.saveGame();
            }
        };
        
        itemDiv.appendChild(itemName);
        itemDiv.appendChild(itemDesc);
        itemDiv.appendChild(itemPrice);
        itemDiv.appendChild(buyButton);
        shopDiv.appendChild(itemDiv);
    }
    
    document.body.appendChild(shopDiv);
}

// –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤
const saveSystem = {
    saveGame: function() {
        const gameData = {
            score: score,
            addPerClick: addPerClick,
            addPerSecond: addPerSecond,
            suns: suns,
            addSuns: addSuns,
            casePrice: casePrice,
            casePriceo: casePriceo,
            shopItems: {}
        };
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞
        for (const [key, item] of Object.entries(shopItems)) {
            gameData.shopItems[key] = {
                owned: item.owned
            };
        }
        
        localStorage.setItem('plantClickerSave', JSON.stringify(gameData));
        console.log('–ò–≥—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞');
    },
    
    loadGame: function() {
        const savedData = localStorage.getItem('plantClickerSave');
        if (savedData) {
            const gameData = JSON.parse(savedData);
            
            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
            score = gameData.score || 0;
            addPerClick = gameData.addPerClick || 1;
            addPerSecond = gameData.addPerSecond || 0;
            suns = gameData.suns || 0;
            addSuns = gameData.addSuns || 0.01;
            casePrice = gameData.casePrice || 1;
            casePriceo = gameData.casePriceo || 2;
            
            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã
            if (gameData.shopItems) {
                for (const [key, itemData] of Object.entries(gameData.shopItems)) {
                    if (shopItems[key]) {
                        shopItems[key].owned = itemData.owned || 0;
                        // –ü—Ä–∏–º–µ–Ω—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã –∫—É–ø–ª–µ–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤
                        for (let i = 0; i < itemData.owned; i++) {
                            shopItems[key].effect();
                        }
                    }
                }
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            scoreText.innerText = score;
            addText.innerText = addPerClick;
            sunsDiv.innerText = suns.toFixed(2);
            checkBGImage();
            
            console.log('–ò–≥—Ä–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
            return true;
        }
        console.log('–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
        return false;
    },
    // ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã saveSystem
};

// –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
setInterval(() => {
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–≤ —Å–æ–ª–Ω—Ü
    const sunGenerators = [shopItems.sunGenerator, shopItems.sunGeneratorPro];
    sunGenerators.forEach(item => {
        if (item.owned > 0) {
            getSuns((item.effect.toString().includes('+= 1') ? 1 : 5) * item.owned);
        }
    });
}, 5000); // –ö–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥

setInterval(() => {
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã —É—Å–∏–ª–∏—Ç–µ–ª–µ–π –∫–∞–ø–µ–ª—å
    const dropBoosters = [shopItems.dropBooster, shopItems.dropBoosterPro];
    dropBoosters.forEach(item => {
        if (item.owned > 0) {
            getScore((item.effect.toString().includes('+= 100') ? 100 : 1000) * item.owned);
        }
    });
}, 10000); // –ö–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–∞–≥–∞–∑–∏–Ω –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    saveSystem.loadGame();
    saveSystem.initAutoSave();
    createShop();
});
